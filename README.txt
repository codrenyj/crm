安装使用
=========================

frontend 是 vue3 前端。 
进入 frontend 目录。 
执行  npm install   安装必要的包
执行  npm run dev  启动服务


frontend_api_spring_boot 是  spring boot 做的后端

在postgresql 中创建表  crm.public.user , crm.public.custom

CREATE TABLE IF NOT EXISTS public.custom
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default",
    mobile character varying(100) COLLATE pg_catalog."default",
    sex character varying(100) COLLATE pg_catalog."default",
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    status integer,
    CONSTRAINT custom_pkey PRIMARY KEY (id)
)


CREATE TABLE IF NOT EXISTS public."user"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    username character varying(100) COLLATE pg_catalog."default",
    password character varying(100) COLLATE pg_catalog."default",
    creatd_at timestamp without time zone,
    updated_at timestamp without time zone,
    token character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT user_pkey PRIMARY KEY (id)
)





进入 frontend_api_spring_boot 目录

src/main/resource/application.properties 中修改postgresql 数据库的连接信息
src/main/resource/generator/generatorConfiglxml 中修改 postgresql数据库的连接信息


执行  mvn install  安装必要的包
执行 mvn spring-boot:run 启动


## nginx 配置
在nginx 的配置中增加一个 server 段。 内容为  nginx_vhosts_config 
绑定本地的 8000 端口， 前端转发到  5173 端口， 后端转发到 8082 端口
最后可以通过  http://127.0.0.1:8000 访问网站





